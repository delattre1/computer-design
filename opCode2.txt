Sem Operação	NOP	0000					
Carrega valor da memória para A	LDA	0001					
Soma A e B e armazena em A	SOMA	0010					
Subtrai B de A e armazena em A	SUB	0011					
Carrega valor imediato para A	LDI	0100					
Salva valor de A para a memória	STA	0101

______



architecture comportamento of decoderInstru is

  constant NOP  : std_logic_vector(3 downto 0) := "0000";
  constant LDA  : std_logic_vector(3 downto 0) := "0001";
  constant SOMA : std_logic_vector(3 downto 0) := "0010";
  constant SUB  : std_logic_vector(3 downto 0) := "0011";
  constant LDI  : std_logic_vector(3 downto 0) := "0100";
  constant STA  : std_logic_vector(3 downto 0) := "0101";

begin
saida <= "000000" when opcode = NOP  else
         "011110" when opcode = LDA  else
         "010010" when opcode = SOMA else
         "010110" when opcode = SUB  else
         "111100" when opcode = LDI  else
	 "001101" when opcode = STA  else
         "000000";  -- NOP para os opcodes Indefinidos

end architecture;

LDI $4         ; Acumulador = 4
STA @257       ; Armazena 4 na posição 257
LDI $3         ; Acumulador = 3
STA @256       ; Armazena 3 na posição 256
Soma @256      ; Soma acumulador com conteúdo de 256

0100 000000100 -- LDI $4
0101 100000001 -- STA@257
0100 000000011 -- LDI $3   
0101 100000000 -- STA @256 
0010 100000000 -- Soma @256

tmp(0)  := "0000";   -- NOP
tmp(1)  := "0001";   -- LDA
tmp(2)  := "0010";   -- SOMA
tmp(3)  := "0010";   -- SOMA
tmp(4)  := "0011";   -- SUB
tmp(5)  := "0000";
tmp(6)  := "0000";
tmp(7)  := "0000";


tmp(0) := "0000000000000"; -- NOP
tmp(1) := "0100000001010"; -- LDI $10
tmp(2) := "0101100000001"; -- STA@256
tmp(3) := "0100000000100"; -- LDI $4   
-- tmp(4) := "0101100000000"; -- STA @256 
tmp(4) := "0011100000000"; -- Sub @256
