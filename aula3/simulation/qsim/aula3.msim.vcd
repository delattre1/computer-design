$comment
	File created using the following command:
		vcd file aula3.msim.vcd -direction
$end
$date
	Mon Mar 28 00:50:27 2022
$end
$version
	ModelSim Version 2020.1
$end
$timescale
	1ps
$end

$scope module aula3_vhd_vec_tst $end
$var wire 1 ! CLOCK_50 $end
$var wire 1 " KEY [3] $end
$var wire 1 # KEY [2] $end
$var wire 1 $ KEY [1] $end
$var wire 1 % KEY [0] $end
$var wire 1 & LEDR [9] $end
$var wire 1 ' LEDR [8] $end
$var wire 1 ( LEDR [7] $end
$var wire 1 ) LEDR [6] $end
$var wire 1 * LEDR [5] $end
$var wire 1 + LEDR [4] $end
$var wire 1 , LEDR [3] $end
$var wire 1 - LEDR [2] $end
$var wire 1 . LEDR [1] $end
$var wire 1 / LEDR [0] $end
$var wire 1 0 PC_OUT [2] $end
$var wire 1 1 PC_OUT [1] $end
$var wire 1 2 PC_OUT [0] $end
$var wire 1 3 SW [9] $end
$var wire 1 4 SW [8] $end
$var wire 1 5 SW [7] $end
$var wire 1 6 SW [6] $end
$var wire 1 7 SW [5] $end
$var wire 1 8 SW [4] $end
$var wire 1 9 SW [3] $end
$var wire 1 : SW [2] $end
$var wire 1 ; SW [1] $end
$var wire 1 < SW [0] $end

$scope module i1 $end
$var wire 1 = gnd $end
$var wire 1 > vcc $end
$var wire 1 ? unknown $end
$var wire 1 @ devoe $end
$var wire 1 A devclrn $end
$var wire 1 B devpor $end
$var wire 1 C ww_devoe $end
$var wire 1 D ww_devclrn $end
$var wire 1 E ww_devpor $end
$var wire 1 F ww_CLOCK_50 $end
$var wire 1 G ww_KEY [3] $end
$var wire 1 H ww_KEY [2] $end
$var wire 1 I ww_KEY [1] $end
$var wire 1 J ww_KEY [0] $end
$var wire 1 K ww_SW [9] $end
$var wire 1 L ww_SW [8] $end
$var wire 1 M ww_SW [7] $end
$var wire 1 N ww_SW [6] $end
$var wire 1 O ww_SW [5] $end
$var wire 1 P ww_SW [4] $end
$var wire 1 Q ww_SW [3] $end
$var wire 1 R ww_SW [2] $end
$var wire 1 S ww_SW [1] $end
$var wire 1 T ww_SW [0] $end
$var wire 1 U ww_LEDR [9] $end
$var wire 1 V ww_LEDR [8] $end
$var wire 1 W ww_LEDR [7] $end
$var wire 1 X ww_LEDR [6] $end
$var wire 1 Y ww_LEDR [5] $end
$var wire 1 Z ww_LEDR [4] $end
$var wire 1 [ ww_LEDR [3] $end
$var wire 1 \ ww_LEDR [2] $end
$var wire 1 ] ww_LEDR [1] $end
$var wire 1 ^ ww_LEDR [0] $end
$var wire 1 _ ww_PC_OUT [2] $end
$var wire 1 ` ww_PC_OUT [1] $end
$var wire 1 a ww_PC_OUT [0] $end
$var wire 1 b \CLOCK_50~input_o\ $end
$var wire 1 c \KEY[1]~input_o\ $end
$var wire 1 d \KEY[2]~input_o\ $end
$var wire 1 e \KEY[3]~input_o\ $end
$var wire 1 f \SW[4]~input_o\ $end
$var wire 1 g \SW[5]~input_o\ $end
$var wire 1 h \LEDR[0]~output_o\ $end
$var wire 1 i \LEDR[1]~output_o\ $end
$var wire 1 j \LEDR[2]~output_o\ $end
$var wire 1 k \LEDR[3]~output_o\ $end
$var wire 1 l \LEDR[4]~output_o\ $end
$var wire 1 m \LEDR[5]~output_o\ $end
$var wire 1 n \LEDR[6]~output_o\ $end
$var wire 1 o \LEDR[7]~output_o\ $end
$var wire 1 p \LEDR[8]~output_o\ $end
$var wire 1 q \LEDR[9]~output_o\ $end
$var wire 1 r \PC_OUT[0]~output_o\ $end
$var wire 1 s \PC_OUT[1]~output_o\ $end
$var wire 1 t \PC_OUT[2]~output_o\ $end
$var wire 1 u \KEY[0]~input_o\ $end
$var wire 1 v \PC|DOUT[0]~2_combout\ $end
$var wire 1 w \PC|DOUT[1]~1_combout\ $end
$var wire 1 x \PC|DOUT[2]~0_combout\ $end
$var wire 1 y \ROM1|memROM~1_combout\ $end
$var wire 1 z \DECODER1|saida[3]~1_combout\ $end
$var wire 1 { \SW[6]~input_o\ $end
$var wire 1 | \ULA1|Add0~18_cout\ $end
$var wire 1 } \ULA1|Add0~1_sumout\ $end
$var wire 1 ~ \SW[0]~input_o\ $end
$var wire 1 !! \DECODER1|saida[2]~0_combout\ $end
$var wire 1 "! \SW[7]~input_o\ $end
$var wire 1 #! \ULA1|Add0~2\ $end
$var wire 1 $! \ULA1|Add0~5_sumout\ $end
$var wire 1 %! \SW[1]~input_o\ $end
$var wire 1 &! \SW[8]~input_o\ $end
$var wire 1 '! \ULA1|Add0~6\ $end
$var wire 1 (! \ULA1|Add0~9_sumout\ $end
$var wire 1 )! \SW[2]~input_o\ $end
$var wire 1 *! \SW[9]~input_o\ $end
$var wire 1 +! \ULA1|Add0~10\ $end
$var wire 1 ,! \ULA1|Add0~13_sumout\ $end
$var wire 1 -! \SW[3]~input_o\ $end
$var wire 1 .! \ROM1|memROM~0_combout\ $end
$var wire 1 /! \PC|DOUT\ [2] $end
$var wire 1 0! \PC|DOUT\ [1] $end
$var wire 1 1! \PC|DOUT\ [0] $end
$var wire 1 2! \REG1|DOUT\ [3] $end
$var wire 1 3! \REG1|DOUT\ [2] $end
$var wire 1 4! \REG1|DOUT\ [1] $end
$var wire 1 5! \REG1|DOUT\ [0] $end
$var wire 1 6! \ALT_INV_SW[9]~input_o\ $end
$var wire 1 7! \ALT_INV_SW[8]~input_o\ $end
$var wire 1 8! \ALT_INV_SW[7]~input_o\ $end
$var wire 1 9! \ALT_INV_SW[6]~input_o\ $end
$var wire 1 :! \DECODER1|ALT_INV_saida[3]~1_combout\ $end
$var wire 1 ;! \PC|ALT_INV_DOUT\ [2] $end
$var wire 1 <! \PC|ALT_INV_DOUT\ [1] $end
$var wire 1 =! \PC|ALT_INV_DOUT\ [0] $end
$var wire 1 >! \ROM1|ALT_INV_memROM~1_combout\ $end
$var wire 1 ?! \REG1|ALT_INV_DOUT\ [3] $end
$var wire 1 @! \REG1|ALT_INV_DOUT\ [2] $end
$var wire 1 A! \REG1|ALT_INV_DOUT\ [1] $end
$var wire 1 B! \REG1|ALT_INV_DOUT\ [0] $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
0!
0=
1>
x?
1@
1A
1B
1C
1D
1E
0F
0b
0c
0d
0e
0f
0g
0h
0i
0j
0k
0l
0m
0n
0o
0p
0q
0r
0s
0t
1u
1v
0w
0x
0y
0z
0{
1|
0}
0~
0!!
0"!
1#!
0$!
0%!
0&!
1'!
0(!
0)!
0*!
1+!
0,!
0-!
0.!
16!
17!
18!
19!
1:!
1>!
0"
0#
0$
1%
03
04
05
06
07
08
09
0:
0;
0<
0G
0H
0I
1J
0K
0L
0M
0N
0O
0P
0Q
0R
0S
0T
0U
0V
0W
0X
0Y
0Z
0[
0\
0]
0^
0_
0`
0a
0/!
00!
01!
02!
03!
04!
05!
1;!
1<!
1=!
1?!
1@!
1A!
1B!
0&
0'
0(
0)
0*
0+
0,
0-
0.
0/
00
01
02
$end
#10000
0%
0J
0u
#20000
1%
1<
1J
1T
1~
1u
11!
0=!
0v
1w
1y
1!!
0>!
1r
1a
12
1p
1V
1'
#30000
0%
0J
0u
#40000
1%
0<
16
1J
0T
1N
1{
0~
1u
09!
01!
10!
15!
1}
0#!
0B!
0<!
1=!
1v
0y
1z
0|
1.!
0}
1#!
1$!
0'!
0:!
1>!
1h
1s
0r
1(!
0+!
0$!
1'!
1}
0#!
0}
1#!
1$!
0'!
0(!
1,!
1^
1`
0a
0$!
1(!
0,!
1/
02
11
1n
1q
0(!
1$!
1X
1U
1)
1&
#50000
0%
0J
0u
#60000
1%
1J
1u
11!
05!
14!
0A!
1B!
0=!
0v
0w
1x
1y
1}
0#!
0$!
1'!
0>!
1i
0h
1r
1(!
1$!
0'!
1]
0^
1a
0(!
0/
1.
12
#70000
0%
0J
0u
#80000
1%
06
14
1J
0N
1L
1&!
0{
1u
19!
07!
01!
00!
1/!
15!
1(!
0}
0B!
0;!
1<!
1=!
1v
0$!
1'!
0(!
1,!
1|
0.!
1#!
1h
1t
0s
0r
1$!
1}
1(!
1^
1_
0`
0a
1/
02
01
10
0n
0X
0)
#90000
0%
0J
0u
#100000
1%
04
1J
0L
0&!
1u
17!
11!
13!
12!
0(!
1+!
0?!
0@!
0=!
0v
1w
0y
0z
0!!
1(!
1:!
1>!
1k
1j
1r
1[
1\
1a
1-
1,
12
0p
0q
0V
0U
0'
0&
#110000
0%
0J
0u
#120000
1%
1J
1u
01!
10!
0<!
1=!
1v
1y
0>!
1s
0r
1`
0a
02
11
#130000
0%
0J
0u
#140000
1%
1J
1u
11!
0=!
0v
0w
0x
0y
1>!
1r
1a
12
#150000
